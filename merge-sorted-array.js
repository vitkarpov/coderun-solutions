/**
 * @param {number[]} nums1 - первый отсортированный массив
 * @param {number} m - количество значимых элементов в nums1
 * @param {number[]} nums2 - второй отсортированный массив
 * @param {number} n - количество элементов в nums2
 * @return {void} Не возвращайте ничего, вместо этого модифицируйте nums1.
 */
module.exports = function merge(nums1, m, nums2, n) {
  let i = m - 1;
  let j = n - 1;
  let k = n + m - 1;
  // бежим с конца сортируя в обратном порядке
  // 46, 55, 88, 0, 0, 0, 0
  //         ^ i          ^ k
  // 18, 29, 80, 90
  //             ^ j
  while (i >= 0 && j >= 0) {
    if (nums1[i] < nums2[j]) {
      nums1[k] = nums2[j];
      j--;
    } else {
      nums1[k] = nums1[i];
      i--;
    }
    k--;
  }
  // пристегнем хвосты:
  // на данном этапе ясно, что все, что осталось можно просто пристегнуть как есть,
  // так как хвост сранивать не с чем и все, что дальше -- отсортировано
  while (i >= 0) {
    nums1[k--] = nums1[i--];
  }
  while (j >= 0) {
    nums1[k--] = nums2[j--];
  }
};
